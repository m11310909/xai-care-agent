// 1. 載入環境變數
require('dotenv').config();

// 2. 引入必要套件
const { Client } = require('@notionhq/client');
const simpleGit = require('simple-git');

// 3. 定義主功能函式
async function logCommitsToNotion() {
  const notionToken = process.env.NOTION_TOKEN;
  const databaseId = process.env.NOTION_DB_ID;

  // 4. 檢查環境變數
  if (!notionToken || !databaseId) {
    console.error('❌ 錯誤：請設定 NOTION_TOKEN 和 NOTION_DB_ID');
    return;
  }

  console.log('🚀 Notion Commit Logger 啟動...');

  try {
    // 5. 初始化 Notion 與 Git
    const notion = new Client({ auth: notionToken });
    const git = simpleGit();

    console.log('🔍 正在從 Git 獲取最新的 commit 紀錄...');
    const log = await git.log(['-1']); // 取得最新一筆 commit

    if (!log.latest) {
      console.warn('⚠️ 找不到任何 Git commit 紀錄，程式結束。');
      return;
    }

    const commit = log.latest;
    console.log(`💬 準備寫入 commit: "${commit.message}"`);

    // 6. 建立 Notion 頁面資料格式
    const pageProperties = {
      parent: { database_id: databaseId },
      properties: {
        Name: {
          title: [{ text: { content: commit.message } }],
        },
        Author: {
          rich_text: [{ text: { content: commit.author_name } }],
        },
        Date: {
          date: {
            start: new Date(commit.date).toISOString(),
          },
        },
      },
    };

    // 7. 寫入 Notion
    await notion.pages.create(pageProperties);
    console.log('✅ 成功！Commit 紀錄已新增至 Notion 資料庫。');

  } catch (error) {
    console.error('❌ 發生錯誤：');
    if (error.body) {
      console.error(JSON.parse(error.body));
    } else {
      console.error(error);
    }
  }
}

// 8. 匯出模組
module.exports = {
  logCommitsToNotion,
};
